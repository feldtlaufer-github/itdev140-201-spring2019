
package muhich_indivproject;

import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;


/**
 * Shows data for books if multiple are found that matched the search query
 * @author Alex Jerard Muhich
 */
public class ListBookFrame extends javax.swing.JFrame {
    private static Book[] bookList;
    /**
     * Creates new form ListMangaFrame
     * @param bookList
     */
    public ListBookFrame(Book[] bookList) {
        ListBookFrame.bookList = bookList;
        initComponents();
        //get the toString list of the books to display in the JList
        String[] stringList = new String[bookList.length];
                for(int i = 0; i <  bookList.length; i++){
                    stringList[i] = bookList[i].toString();
                }
        lvBookList.setListData(stringList);
        
        //when a user clicks on a item in the list open that book's individual panel
        lvBookList.addListSelectionListener((ListSelectionEvent e) -> {
            int index = lvBookList.getSelectedIndex();
            if(bookList[index] instanceof Manga){
                new IndivMangaFrame((Manga)bookList[index]).setVisible(true);
            }else if(bookList[index] instanceof Nostalgia){
                new IndivNostalgiaFrame((Nostalgia)bookList[index]).setVisible(true);
            }else{
                new IndivBookFrame(bookList[index]).setVisible(true);
            }
            this.dispose();
        });
        
        //alternate color backgrounds to facilitate ease of differentiating data
        lvBookList.setCellRenderer( new ColorCellRenderer());
    }
    /**
     * private helper class to change color of alternating data in Jlist
     */
    private static class ColorCellRenderer extends DefaultListCellRenderer {
        @Override
        public Component getListCellRendererComponent( JList list, Object value, int index, boolean isSelected, boolean cellHasFocus ) {
            Component component = super.getListCellRendererComponent( list, value, index, isSelected, cellHasFocus );
            if ( index % 2 == 0 ) {
                component.setBackground( Color.cyan );
            }
            else {
                component.setBackground( Color.pink );
            }
            return component;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lvBookList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Multiple Books Found");
        setResizable(false);

        lvBookList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lvBookList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException |
                 InstantiationException |
                 IllegalAccessException |
                 javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ListBookFrame(bookList).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lvBookList;
    // End of variables declaration//GEN-END:variables
}
